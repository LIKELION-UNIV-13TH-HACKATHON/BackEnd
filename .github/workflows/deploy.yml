name: dingdong
on:
  push:
    branches:
      - Setting/#70
  pull_request:
    branches:
      - Setting/#70

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: JDK 설치
        uses: actions/setup-java@v4
        with:
          distribution: liberica
          java-version: 21

      - name: Make profile config files
        run: |
          mkdir -p src/main/resources
          echo "$PROPERTIES" > src/main/resources/application.yml
          echo "$PROPERTIES_S3" > src/main/resources/application-s3.yml
          echo "$PROPERTIES_LOCAL" > src/main/resources/application-local.yml
          echo "$PROPERTIES_OPENAPI" > src/main/resources/application-openapi.yml
          echo "$FIREBASE" > src/main/resources/firebase.json
          echo "$PROPERTIES_KAKAO" > src/main/resources/application-kakao.yml
        shell: bash
        env:
          PROPERTIES_: ${{ secrets.PROPERTIES }}
          PROPERTIES_S3: ${{ secrets.PROPERTIES_S3 }}
          PROPERTIES_LOCAL: ${{ secrets.PROPERTIES_LOCAL }}
          PROPERTIES_OPENAPI: ${{ secrets.PROPERTIES_OPENAPI }}
          PROPERTIES_KAKAO: ${{ secrets.PROPERTIES_KAKAO }}
          FIREBASE: ${{ secrets.FIREBASE }}

      - name: Gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Spring Boot JAR 빌드
        run: ./gradlew bootJar

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME}}/dingdong:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/dingdong:latest

      - name: AWS EC2에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            docker stop dingdong || true
            docker rm dingdong || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/dingdong:latest
            docker run -d --name dingdong -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/dingdong:latest